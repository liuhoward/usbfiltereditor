From 31dc606689c5da6fc22142f83b8da33b352d0952 Mon Sep 17 00:00:00 2001
From: Tomas Jelinek <tjelinek@redhat.com>
Date: Tue, 15 Nov 2016 21:21:25 +0100
Subject: [PATCH] Fixed the issue that export exported only the last line

---
 index.html | 123 ++++++++++++++++++++++++++++++++-----------------------------
 script.js  |   7 +---
 2 files changed, 66 insertions(+), 64 deletions(-)

diff --git a/index.html b/index.html
index 67e7eec..72a8b98 100644
--- a/index.html
+++ b/index.html
@@ -13,30 +13,31 @@
       <div class="page-header">
         <h1>USB Filter editor</h1>
       </div>
-      <div id="deviceApp"></div>  
+      <div id="deviceApp"></div>
     </div>
-    
+
     <script type="text/jsx">
-     
+
       /** @jsx React.DOM */
-        
+
         var DeviceApp = React.createClass({
           getInitialState: function() {
           return {devicelist:this.props.devices};
         },
         handleNewRowSubmit: function( newdevice ) {
           this.setState( {devicelist: this.state.devicelist.concat([newdevice])} );
-          
+
         },
 
         handleNewRowExport: function( newdevice ) {
-         
-          this.setState( {devicelistexport: this.state.devicelist.concat([newdevice])} );
+          var newState = this.state.devicelistexport ?
+            this.state.devicelistexport.concat([newdevice]) : [newdevice];
+          this.setState( {devicelistexport: newState} );
         },
 
         handleDeviceRemove: function( device ) {
-          
-          var index = -1;	
+
+          var index = -1;
           var clength = this.state.devicelist.length;
       		for( var i = 0; i < clength; i++ ) {
       			if( this.state.devicelist[i].cname === device.cname ) {
@@ -44,19 +45,23 @@
       				break;
       			}
       		}
-      		this.state.devicelist.splice( index, 1 );	
+      		this.state.devicelist.splice( index, 1 );
       		this.setState( {devicelist: this.state.devicelist} );
-          
+          if (this.state.devicelistexport) {
+            this.state.devicelistexport.splice( index, 1 );
+        		this.setState( {devicelist: this.state.devicelistexport} );
+          }
+
         },
 
         handleExportDevice: function() {
-                     
-            var CSV = ""; 
+
+            var CSV = "";
             var ReportTitle ="USB Filter";
             CSV += ReportTitle + '\r\n\n';
             var row = "";
             for (var index in this.state.devicelistexport[0]) {
-              
+
               //Now convert each value to string and comma-seprated
               if(index=='cname'){
                index ="USB Class";
@@ -74,7 +79,7 @@
                 index="Action";
               }
               row += index + ',';
-              
+
               console.log("column names are "+row);
             }
             row = row.slice(0, -1);
@@ -82,24 +87,24 @@
             //1st loop is to extract each row
             for (var i = 0; i < this.state.devicelistexport.length; i++) {
                 var row = "";
-                
+
                 //2nd loop will extract each column and convert it in string comma-seprated
                 for (var index in this.state.devicelistexport[i]) {
                     row += '"' + this.state.devicelistexport[i][index] + '",';
                   }
-                
+
                 row.slice(0, row.length - 1);
-                
+
                 //add a line break after each row
                 CSV += row + '\r\n';
             }
 
-            if (CSV == '') {        
+            if (CSV == '') {
                alert("Invalid data");
                return;
             }
 
-           var fileName = "MyReport_"; 
+           var fileName = "MyReport_";
            fileName += ReportTitle.replace(/ /g,"_");
            var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);
            var link = document.createElement("a");
@@ -112,12 +117,12 @@
 
         },
 
-       
+
         render: function() {
           var tableStyle = {width: '100%'};
           var leftTdStyle = {width: '50%',padding:'20px',verticalAlign: 'top'};
           var rightTdStyle = {width: '50%',padding:'20px',verticalAlign: 'top'};
-          return ( 
+          return (
             <table style={tableStyle}>
               <tr>
                 <td style={leftTdStyle}>
@@ -125,46 +130,46 @@
                 </td>
                 <td style={rightTdStyle}>
                   <NewRow onRowSubmit={this.handleNewRowSubmit} onRowExport={this.handleNewRowExport}/>
-                    
+
                 </td>
-                <td> 
+                <td>
                 <input type="button"  className="btn btn-primary" value="Export" onClick={this.handleExportDevice}/>
               </td>
               </tr>
-              
+
           </table>
-         
+
           );
         }
       });
-      
+
       var DeviceList = React.createClass({
         handleDeviceRemove: function(device){
           this.props.onDeviceRemove( device );
         },
         render: function() {
-          
+
           var devices = [];
           var that = this; // TODO: Needs to find out why that = this made it work; Was getting error that onDeviceDelete is not undefined
           this.props.clist.forEach(function(device) {
             devices.push(<Device device={device} onDeviceDelete={that.handleDeviceRemove} /> );
           });
           console.log("device is "+ {devices});
-          return ( 
+          return (
             <div>
               <h3>List of devices</h3>
               <table className="table table-striped">
                 <thead><tr><th>USB CLASS</th><th>Vendor</th><th>Product</th><th>Revision</th><th>Allow/Block</th><th>Action</th></tr></thead>
                 <tbody>{devices}</tbody>
               </table>
-              
+
             </div>
 
-            
+
             );
         }
       });
-      
+
       var Device = React.createClass({
         handleRemoveDevice: function() {
           this.props.onDeviceDelete( this.props.device );
@@ -179,14 +184,14 @@
               <td>{this.props.device.hoffice}</td>
               <td>{this.props.device.action}</td>
               <td><input type="button"  className="btn btn-primary" value="Remove" onClick={this.handleRemoveDevice}/></td>
-              
+
             </tr>
-           
-            
+
+
             );
         }
       });
-      
+
       var NewRow = React.createClass({
          getInitialState:function(){
          return {selectValueUSB:'USB Class',selectValueVendor:'Vendor ID',selectValueProduct:'Product ID'};
@@ -195,32 +200,32 @@
          },
          handleChangeUSB:function(e){
             this.setState({selectValueUSB:e.target.value});
-            this.setState({targetValueUSB:e.target.value}); 
+            this.setState({targetValueUSB:e.target.value});
          },
 
-         handleChangeVendor:function(e){         
+         handleChangeVendor:function(e){
          this.setState({selectValueVendor:e.target.value});
          this.setState({targetValueVendor:e.target.value});
-         console.log("device list from handle change vendor "+ this.state.devicelist);  
+         console.log("device list from handle change vendor "+ this.state.devicelist);
          svendor = displayVendors(e.target.value,this.state.devicelist);
          svendorid = e.target.value;
-         console.log("selected vendor name"+svendor);    
-                                
+         console.log("selected vendor name"+svendor);
+
          },
 
-         handleChangeProduct:function(e){         
+         handleChangeProduct:function(e){
          this.setState({selectValueProduct:e.target.value});
-         this.setState({targetValueProduct:e.target.value});        
+         this.setState({targetValueProduct:e.target.value});
          },
 
         handleChangeAction:function(e){
           this.setState({selectAction:e.target.value});
           this.setState({targetAction:e.target.value});
         },
-        
+
         handleSubmit: function() {
         var classids=[];
-        var classnames=[]; 
+        var classnames=[];
         var productids=[];
         var productnames=[];
         var vendorids=[];
@@ -230,7 +235,7 @@
         var vendorid;
         var actionid;
 
-        var cname = this.refs.cname.getDOMNode().value;  
+        var cname = this.refs.cname.getDOMNode().value;
         classids= displayClassids();
         classnames= displayClassNames();
         console.log("classids are "+ classids);
@@ -265,7 +270,7 @@
         console.log("productids "+productid);
         console.log("vendorids "+vendorid);
         console.log("classids "+classids);
-        
+
 
         var hoffice = this.refs.hoffice.getDOMNode().value;
         var action = this.refs.action.getDOMNode().value;
@@ -277,11 +282,11 @@
         }
 
         console.log("actionid"+actionid);
-        
+
         var newrow = {cname: cname, ecount: ecount,pcount:pcount, hoffice: hoffice, action:action };
         var newrowcsv = {cname: usbclass, ecount: vendorid,pcount:productid, hoffice: hoffice, action:actionid };
         this.props.onRowSubmit( newrow );
-        this.props.onRowExport(newrowcsv);        
+        this.props.onRowExport(newrowcsv);
         this.refs.cname.getDOMNode().value = '';
         this.refs.ecount.getDOMNode().value ='';
         this.refs.pcount.getDOMNode().value = '';
@@ -289,19 +294,19 @@
         this.refs.action.getDOMNode().value = '';
         return false;
       },
-        
+
         render: function() {
           var inputStyle = {padding:'12px'}
-          return ( 
+          return (
             <div className="well">
               <h3>Add A device</h3>
             <form onSubmit={this.handleSubmit}>
 
-              
+
               <div>
-              
+
               <select className="form-control col-md-8" value={this.state.selectValueUSB} ref="cname"
-               onChange={this.handleChangeUSB} 
+               onChange={this.handleChangeUSB}
               >
                <option value="USB Class">USB Class</option>
                <option value="Application Specific(0xfe)">Application Specific(0xfe)</option>
@@ -330,7 +335,7 @@
                 <option value="Vendor id">Vendor ID</option>
                 </select>
               </div>
-                &nbsp;                
+                &nbsp;
                <div>
                 <select id="selectProduct" className="form-control col-md-8" value={this.state.selectValueProduct} ref="pcount" onChange={this.handleChangeProduct}>
                 <option value="Product id">Product ID</option>
@@ -349,21 +354,21 @@
                 <input type="text"  className="form-control col-md-8" placeholder="Revision" ref="hoffice"/>
               </div>
               &nbsp;
-                           
+
               <div className="input-group input-group-lg" style={inputStyle}>
                 <input type="submit"  className="btn btn-primary" value="Add Device"/>
               </div>
 
-              
+
             </form>
             </div>
             );
         }
       });
-       
+
       var defDevices = [{cname:"Any",ecount:"empia technology",pcount:"kelvinator",hoffice:"Silvercrestwebcam",action:"Allow"},{cname:"Any",ecount:"Microsoft Corp",pcount:"electrolux",hoffice:"Lifecam-vx300",action:"Block"},{cname:"Any",ecount:"hp Corp",pcount:"canon",hoffice:"Lifecam-vx750",action:"Allow"}];
       console.log("definition of devices is "+defDevices);
       React.renderComponent( <DeviceApp devices={defDevices}/>, document.getElementById( "deviceApp" ) );
     </script>
   </body>
-  </html>
\ No newline at end of file
+  </html>
diff --git a/script.js b/script.js
index 72756ff..a13a4f2 100644
--- a/script.js
+++ b/script.js
@@ -97,12 +97,9 @@ function displayProducts(f) {
     availableproducts.length=0;
     console.log("ap:"+availableproducts);
     for(i=0;i<pvendorids.length;i++){
-
-      // TODO this is just a dirty fix to make something show up in the UI
-
-        // if(f==pvendorids[i]){
+        if(f==pvendorids[i]){
             availableproducts.push(productnames[i]);
-        // }
+        }
      }
     console.log("availableproducts",availableproducts);
     for(var i = 0; i < availableproducts.length; i++) {
-- 
1.9.3

